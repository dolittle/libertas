{"version":3,"file":"http-auth-header.js","sourceRoot":"","sources":["http-auth-header.ts"],"names":[],"mappings":";;AAEA,qCAAkC;AAGlC,MAAM,CAAC,OAAO,GAAG,UAAU,GAAQ;IAE/B,MAAM,cAAe,SAAQ,WAAI;QAG7B,YAAY,MAAsB;YAC9B,KAAK,CAAC,GAAG,CAAC,CAAC;YAEX,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAExB,MAAM,CAAC,GAAG,MAAa,CAAC;YACxB,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,cAAc,CAA0B,CAAC;YAEpF,MAAM,QAAQ,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,IAAI,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;YACrF,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAExD,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;gBACrB,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC;gBACjB,GAAG,CAAC,OAAO,CAAC,aAAa,GAAG,SAAS,MAAM,EAAE,CAAC;gBAC9C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC,CAAC,CAAC;QACP,CAAC;KACJ;IAED,cAAc,CAAC,YAAY,CAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;AACzD,CAAC,CAAC","sourcesContent":["import { NodeProperties, Red } from 'node-red';\n\nimport { Node } from '../../Node';\nimport { HttpAuthConfig } from '../http-auth-config/http-auth-config';\n\nmodule.exports = function (RED: Red) {\n\n    class HttpAuthHeader extends Node {\n        private _authentication?: HttpAuthConfig;\n\n        constructor(config: NodeProperties) {\n            super(RED);\n\n            this.createNode(config);\n\n            const c = config as any;\n            this._authentication = RED.nodes.getNode(c.authentication) as any as HttpAuthConfig;\n\n            const combined = `${this._authentication.username}:${this._authentication.password}`;\n            const base64 = Buffer.from(combined).toString('base64');\n\n            this.on('input', (msg) => {\n                msg.headers = {};\n                msg.headers.Authorization = `Basic ${base64}`;\n                this.send(msg);\n            });\n        }\n    }\n\n    HttpAuthHeader.registerType(RED, 'http-auth-header');\n};\n"]}